services:
  #################################
  # Patient Microservice
  #################################
  patient:
    build: ./Patient/patient
    image: ESDG2T1/patient:1.0
    restart: always
    ports:
      - "5001:5001"
    depends_on:
      - patient_db
    environment:
      dbURL: mysql+mysqlconnector://root@host.docker.internal:3306/patientdb
    networks:
      - atomic_network

  #################################
  # Patient SQL Database
  #################################
  patient_db:
    image: mysql:latest
    restart: always
    ports:
      - "3301:3306"
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: yes
    volumes:
      - ./Patient/db/patient.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - atomic_network

  #################################
  # Appointment Microservice
  #################################
  appointment:
    build: ./Appointment/appointment
    image: ESDG2T1/appointment:1.0
    restart: always
    ports:
      - "5002:5002"
    depends_on:
      - appointment_db
    environment:
      dbURL: mysql+mysqlconnector://root@host.docker.internal:3306/appointmentdb
    networks:
      - atomic_network

  #################################
  # Appointment SQL Database
  #################################
  appointment_db:
    image: mysql:latest
    restart: always
    ports:
      - "3302:3306"
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: yes
    volumes:
      - ./Appointment/db/appointment.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - atomic_network

  #################################
  # Prescription Microservice
  #################################
  prescription:
    build: ./Prescription/prescription
    image: ESDG2T1/prescription:1.0
    restart: always
    ports:
      - "5003:5003"
    depends_on:
      - prescription_db
    environment:
      dbURL: mysql+mysqlconnector://root@host.docker.internal:3306/prescriptiondb
    networks:
      - atomic_network


  #################################
  # Prescription SQL Database
  #################################
  prescription_db:
    image: mysql:latest
    restart: always
    ports:
      - "3303:3306"
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: yes
    volumes:
      - ./Prescription/db/prescription.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - atomic_network

  #################################
  # Billing Microservice
  #################################
  billing:
    build: ./Billing/billing
    image: ESDG2T1/billing:1.0
    restart: always
    ports:
      - "5014:5004"
    depends_on:
      - billing_db
      - patient
    environment:
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_PUBLISHABLE_KEY: ${STRIPE_PUBLISHABLE_KEY}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
      YOUR_DOMAIN: ${YOUR_DOMAIN}
      PATIENT_MICROSERVICE_URL: ${PATIENT_MICROSERVICE_URL}
      dbURL: mysql+mysqlconnector://root@host.docker.internal:3306/billing  
    env_file:
      - .env
    networks:
      - atomic_network

  #################################
  # Billing SQL Database
  #################################
  billing_db:
    image: mysql:latest
    restart: always
    ports:
      - "3304:3306"
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: yes
    volumes:
      - ./Billing/db/billing.sql:/docker-entrypoint-initdb.d/init.sql

  #################################
  # Notification Microservice
  #################################
  notification:
    build: ./Notification/notification  
    image: ESDG2T1/notification:1.0
    restart: always
    ports:
      - "5015:5005"
    environment:
      TWILIO_ACCOUNT_SID: ${TWILIO_ACCOUNT_SID}
      TWILIO_AUTH_TOKEN: ${TWILIO_AUTH_TOKEN}
      TWILIO_PHONE_NUMBER: ${TWILIO_PHONE_NUMBER}
      GMAIL_USERNAME: ${GMAIL_USERNAME}
      GMAIL_PASSWORD: ${GMAIL_PASSWORD}
    env_file:
      - .env
    networks:
      - atomic_network

  #################################
  # Availability Microservice
  #################################
  availability:
    build: ./Availability
    image: ESDG2T1/availability:1.0
    restart: always
    ports:
      - "5024:5000"
    environment:
      dbURL: GOOGLE_APPLICATION_CREDENTIALS=/app/serviceAccountKey.json
    networks:
      - atomic_network
  

networks:
  atomic_network:
    driver: bridge
    name: atomic_network

